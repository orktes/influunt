// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package executor

func addintAndint(a int, b int) int {
	return a + int(b)
}

func substractintAndint(a int, b int) int {
	return a - int(b)
}

func divintAndint(a int, b int) int {
	return a / int(b)
}

func multiplyintAndint(a int, b int) int {
	return a * int(b)
}

func lessThanintAndint(a int, b int) bool {
	return a < int(b)
}

func lessOrEqualintAndint(a int, b int) bool {
	return a <= int(b)
}

func greaterThanintAndint(a int, b int) bool {
	return a > int(b)
}

func greaterOrEqualintAndint(a int, b int) bool {
	return a >= int(b)
}

func equalintAndint(a int, b int) bool {
	return a == int(b)
}

func notEqualintAndint(a int, b int) bool {
	return a != int(b)
}

var _ = addMathFunc("add", addintAndint)
var _ = addMathFunc("substract", substractintAndint)
var _ = addMathFunc("div", divintAndint)
var _ = addMathFunc("mul", multiplyintAndint)
var _ = addMathFunc("lt", lessThanintAndint)
var _ = addMathFunc("lte", lessOrEqualintAndint)
var _ = addMathFunc("gt", greaterThanintAndint)
var _ = addMathFunc("gte", greaterOrEqualintAndint)
var _ = addMathFunc("eq", equalintAndint)
var _ = addMathFunc("ne", notEqualintAndint)

func addintAndint32(a int, b int32) int {
	return a + int(b)
}

func substractintAndint32(a int, b int32) int {
	return a - int(b)
}

func divintAndint32(a int, b int32) int {
	return a / int(b)
}

func multiplyintAndint32(a int, b int32) int {
	return a * int(b)
}

func lessThanintAndint32(a int, b int32) bool {
	return a < int(b)
}

func lessOrEqualintAndint32(a int, b int32) bool {
	return a <= int(b)
}

func greaterThanintAndint32(a int, b int32) bool {
	return a > int(b)
}

func greaterOrEqualintAndint32(a int, b int32) bool {
	return a >= int(b)
}

func equalintAndint32(a int, b int32) bool {
	return a == int(b)
}

func notEqualintAndint32(a int, b int32) bool {
	return a != int(b)
}

var _ = addMathFunc("add", addintAndint32)
var _ = addMathFunc("substract", substractintAndint32)
var _ = addMathFunc("div", divintAndint32)
var _ = addMathFunc("mul", multiplyintAndint32)
var _ = addMathFunc("lt", lessThanintAndint32)
var _ = addMathFunc("lte", lessOrEqualintAndint32)
var _ = addMathFunc("gt", greaterThanintAndint32)
var _ = addMathFunc("gte", greaterOrEqualintAndint32)
var _ = addMathFunc("eq", equalintAndint32)
var _ = addMathFunc("ne", notEqualintAndint32)

func addint32Andint(a int32, b int) int32 {
	return a + int32(b)
}

func substractint32Andint(a int32, b int) int32 {
	return a - int32(b)
}

func divint32Andint(a int32, b int) int32 {
	return a / int32(b)
}

func multiplyint32Andint(a int32, b int) int32 {
	return a * int32(b)
}

func lessThanint32Andint(a int32, b int) bool {
	return a < int32(b)
}

func lessOrEqualint32Andint(a int32, b int) bool {
	return a <= int32(b)
}

func greaterThanint32Andint(a int32, b int) bool {
	return a > int32(b)
}

func greaterOrEqualint32Andint(a int32, b int) bool {
	return a >= int32(b)
}

func equalint32Andint(a int32, b int) bool {
	return a == int32(b)
}

func notEqualint32Andint(a int32, b int) bool {
	return a != int32(b)
}

var _ = addMathFunc("add", addint32Andint)
var _ = addMathFunc("substract", substractint32Andint)
var _ = addMathFunc("div", divint32Andint)
var _ = addMathFunc("mul", multiplyint32Andint)
var _ = addMathFunc("lt", lessThanint32Andint)
var _ = addMathFunc("lte", lessOrEqualint32Andint)
var _ = addMathFunc("gt", greaterThanint32Andint)
var _ = addMathFunc("gte", greaterOrEqualint32Andint)
var _ = addMathFunc("eq", equalint32Andint)
var _ = addMathFunc("ne", notEqualint32Andint)

func addint32Andint32(a int32, b int32) int32 {
	return a + int32(b)
}

func substractint32Andint32(a int32, b int32) int32 {
	return a - int32(b)
}

func divint32Andint32(a int32, b int32) int32 {
	return a / int32(b)
}

func multiplyint32Andint32(a int32, b int32) int32 {
	return a * int32(b)
}

func lessThanint32Andint32(a int32, b int32) bool {
	return a < int32(b)
}

func lessOrEqualint32Andint32(a int32, b int32) bool {
	return a <= int32(b)
}

func greaterThanint32Andint32(a int32, b int32) bool {
	return a > int32(b)
}

func greaterOrEqualint32Andint32(a int32, b int32) bool {
	return a >= int32(b)
}

func equalint32Andint32(a int32, b int32) bool {
	return a == int32(b)
}

func notEqualint32Andint32(a int32, b int32) bool {
	return a != int32(b)
}

var _ = addMathFunc("add", addint32Andint32)
var _ = addMathFunc("substract", substractint32Andint32)
var _ = addMathFunc("div", divint32Andint32)
var _ = addMathFunc("mul", multiplyint32Andint32)
var _ = addMathFunc("lt", lessThanint32Andint32)
var _ = addMathFunc("lte", lessOrEqualint32Andint32)
var _ = addMathFunc("gt", greaterThanint32Andint32)
var _ = addMathFunc("gte", greaterOrEqualint32Andint32)
var _ = addMathFunc("eq", equalint32Andint32)
var _ = addMathFunc("ne", notEqualint32Andint32)

func addfloat32Andint(a float32, b int) float32 {
	return a + float32(b)
}

func substractfloat32Andint(a float32, b int) float32 {
	return a - float32(b)
}

func divfloat32Andint(a float32, b int) float32 {
	return a / float32(b)
}

func multiplyfloat32Andint(a float32, b int) float32 {
	return a * float32(b)
}

func lessThanfloat32Andint(a float32, b int) bool {
	return a < float32(b)
}

func lessOrEqualfloat32Andint(a float32, b int) bool {
	return a <= float32(b)
}

func greaterThanfloat32Andint(a float32, b int) bool {
	return a > float32(b)
}

func greaterOrEqualfloat32Andint(a float32, b int) bool {
	return a >= float32(b)
}

func equalfloat32Andint(a float32, b int) bool {
	return a == float32(b)
}

func notEqualfloat32Andint(a float32, b int) bool {
	return a != float32(b)
}

var _ = addMathFunc("add", addfloat32Andint)
var _ = addMathFunc("substract", substractfloat32Andint)
var _ = addMathFunc("div", divfloat32Andint)
var _ = addMathFunc("mul", multiplyfloat32Andint)
var _ = addMathFunc("lt", lessThanfloat32Andint)
var _ = addMathFunc("lte", lessOrEqualfloat32Andint)
var _ = addMathFunc("gt", greaterThanfloat32Andint)
var _ = addMathFunc("gte", greaterOrEqualfloat32Andint)
var _ = addMathFunc("eq", equalfloat32Andint)
var _ = addMathFunc("ne", notEqualfloat32Andint)

func addfloat32Andint32(a float32, b int32) float32 {
	return a + float32(b)
}

func substractfloat32Andint32(a float32, b int32) float32 {
	return a - float32(b)
}

func divfloat32Andint32(a float32, b int32) float32 {
	return a / float32(b)
}

func multiplyfloat32Andint32(a float32, b int32) float32 {
	return a * float32(b)
}

func lessThanfloat32Andint32(a float32, b int32) bool {
	return a < float32(b)
}

func lessOrEqualfloat32Andint32(a float32, b int32) bool {
	return a <= float32(b)
}

func greaterThanfloat32Andint32(a float32, b int32) bool {
	return a > float32(b)
}

func greaterOrEqualfloat32Andint32(a float32, b int32) bool {
	return a >= float32(b)
}

func equalfloat32Andint32(a float32, b int32) bool {
	return a == float32(b)
}

func notEqualfloat32Andint32(a float32, b int32) bool {
	return a != float32(b)
}

var _ = addMathFunc("add", addfloat32Andint32)
var _ = addMathFunc("substract", substractfloat32Andint32)
var _ = addMathFunc("div", divfloat32Andint32)
var _ = addMathFunc("mul", multiplyfloat32Andint32)
var _ = addMathFunc("lt", lessThanfloat32Andint32)
var _ = addMathFunc("lte", lessOrEqualfloat32Andint32)
var _ = addMathFunc("gt", greaterThanfloat32Andint32)
var _ = addMathFunc("gte", greaterOrEqualfloat32Andint32)
var _ = addMathFunc("eq", equalfloat32Andint32)
var _ = addMathFunc("ne", notEqualfloat32Andint32)

func addfloat64Andint(a float64, b int) float64 {
	return a + float64(b)
}

func substractfloat64Andint(a float64, b int) float64 {
	return a - float64(b)
}

func divfloat64Andint(a float64, b int) float64 {
	return a / float64(b)
}

func multiplyfloat64Andint(a float64, b int) float64 {
	return a * float64(b)
}

func lessThanfloat64Andint(a float64, b int) bool {
	return a < float64(b)
}

func lessOrEqualfloat64Andint(a float64, b int) bool {
	return a <= float64(b)
}

func greaterThanfloat64Andint(a float64, b int) bool {
	return a > float64(b)
}

func greaterOrEqualfloat64Andint(a float64, b int) bool {
	return a >= float64(b)
}

func equalfloat64Andint(a float64, b int) bool {
	return a == float64(b)
}

func notEqualfloat64Andint(a float64, b int) bool {
	return a != float64(b)
}

var _ = addMathFunc("add", addfloat64Andint)
var _ = addMathFunc("substract", substractfloat64Andint)
var _ = addMathFunc("div", divfloat64Andint)
var _ = addMathFunc("mul", multiplyfloat64Andint)
var _ = addMathFunc("lt", lessThanfloat64Andint)
var _ = addMathFunc("lte", lessOrEqualfloat64Andint)
var _ = addMathFunc("gt", greaterThanfloat64Andint)
var _ = addMathFunc("gte", greaterOrEqualfloat64Andint)
var _ = addMathFunc("eq", equalfloat64Andint)
var _ = addMathFunc("ne", notEqualfloat64Andint)

func addfloat64Andint32(a float64, b int32) float64 {
	return a + float64(b)
}

func substractfloat64Andint32(a float64, b int32) float64 {
	return a - float64(b)
}

func divfloat64Andint32(a float64, b int32) float64 {
	return a / float64(b)
}

func multiplyfloat64Andint32(a float64, b int32) float64 {
	return a * float64(b)
}

func lessThanfloat64Andint32(a float64, b int32) bool {
	return a < float64(b)
}

func lessOrEqualfloat64Andint32(a float64, b int32) bool {
	return a <= float64(b)
}

func greaterThanfloat64Andint32(a float64, b int32) bool {
	return a > float64(b)
}

func greaterOrEqualfloat64Andint32(a float64, b int32) bool {
	return a >= float64(b)
}

func equalfloat64Andint32(a float64, b int32) bool {
	return a == float64(b)
}

func notEqualfloat64Andint32(a float64, b int32) bool {
	return a != float64(b)
}

var _ = addMathFunc("add", addfloat64Andint32)
var _ = addMathFunc("substract", substractfloat64Andint32)
var _ = addMathFunc("div", divfloat64Andint32)
var _ = addMathFunc("mul", multiplyfloat64Andint32)
var _ = addMathFunc("lt", lessThanfloat64Andint32)
var _ = addMathFunc("lte", lessOrEqualfloat64Andint32)
var _ = addMathFunc("gt", greaterThanfloat64Andint32)
var _ = addMathFunc("gte", greaterOrEqualfloat64Andint32)
var _ = addMathFunc("eq", equalfloat64Andint32)
var _ = addMathFunc("ne", notEqualfloat64Andint32)
